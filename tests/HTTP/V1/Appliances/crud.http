###  1. Create Appliance
POST https://{{host}}/v1/appliances
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name":  "Test Appliance",
    "logo_uri": "https://laravel.com/img/logotype.min.svg",
    "description": "Test Appliance Description",
    "documentation_uri": "https://laravel.com/docs/9.x/database-testing",
    "publisher": "Laravel",
    "active": true,
    "public": true
}

> {%
client.test('Create Appliance', function () {
    client.assert(response.status === 201, '201 response not received');
});
client.global.set('appliance_id', response.body.data.id);
%}

### 2. Get Appliance Collection
GET https://{{host}}/v1/appliances
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Collection', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### 4. Get Appliance Resource
GET https://{{host}}/v1/appliances/{{appliance_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Resource', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### 5. Update Appliance
PATCH https://{{host}}/v1/appliances/{{appliance_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "description": "Test Appliance Description (Updated)"
}

> {%
client.test('Update Resource', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### 6. Verify Appliance Resource
GET https://{{host}}/v1/appliances/{{appliance_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Resource', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(
            response.body.data.description === 'Test Appliance Description (Updated)',
            'Description does not match'
    );
});
%}

### 7. Verify Appliance Resource
DELETE https://{{host}}/v1/appliances/{{appliance_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete resource', function () {
    client.assert(response.status === 204, '204 response not received');
});
%}