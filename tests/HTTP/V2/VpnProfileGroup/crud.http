### Create Resource (Non-Admin)
POST https://{{host}}/{{version}}/vpn-profile-groups
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Profile Group CRUD Test",
    "description": "VPN Profile Group CRUD Test Record",
    "ike_profile_id": "ike-aaaaaaaa",
    "ipsec_profile_id": "ipsec-aaaaaaaa",
    "dpd_profile_id": "dpd-aaaaaaaa"
}

> {%
client.test('Create Resource', function () {
    client.assert(response.status === 401, '401 response not received');
});
%}

### Create Resource
POST https://{{host}}/{{version}}/vpn-profile-groups
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Profile Group CRUD Test",
    "description": "VPN Profile Group CRUD Test Record",
    "ike_profile_id": "ike-aaaaaaaa",
    "ipsec_profile_id": "ipsec-aaaaaaaa",
    "dpd_profile_id": "dpd-aaaaaaaa"
}

> {%
client.test('Create Resource', function () {
    client.assert(response.status === 201, '201 response not received');
});
client.global.set('vpn_profile_group_id', response.body.data.id);
client.log('VPN Profile Group ID: ' + response.body.data.id);
%}

### Get collection
GET https://{{host}}/{{version}}/vpn-profile-groups
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Collection', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### Update Resource (Non-Admin)
PATCH https://{{host}}/{{version}}/vpn-profile-groups/{{vpn_profile_group_id}}
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Profile Group CRUD Test (Updated)",
    "description": "VPN Profile Group CRUD Test Record (Updated)"
}

> {%
client.test('Update Resource', function () {
    client.assert(response.status === 401, '401 response not received');
});
%}

### Update Resource
PATCH https://{{host}}/{{version}}/vpn-profile-groups/{{vpn_profile_group_id}}
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Profile Group CRUD Test (Updated)",
    "description": "VPN Profile Group CRUD Test Record (Updated)"
}

> {%
client.test('Update Resource', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### Get Updated Resource
GET https://{{host}}/{{version}}/vpn-profile-groups/{{vpn_profile_group_id}}
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Updated Resource', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(response.body.data.name === 'Profile Group CRUD Test (Updated)', 'Expected name value is incorrect');
});
%}

### Delete Resource (Non-Admin)
DELETE https://{{host}}/{{version}}/vpn-profile-groups/{{vpn_profile_group_id}}
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Update Resource', function () {
    client.assert(response.status === 401, '401 response not received');
});
%}

### Delete Resource
DELETE https://{{host}}/{{version}}/vpn-profile-groups/{{vpn_profile_group_id}}
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Update Resource', function () {
    client.assert(response.status === 204, '204 response not received');
});
%}