### Create hostgroup
POST https://{{host}}/{{version}}/host-groups
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Capacity Check Hostgroup",
    "vpc_id": "{{dev_vpc_id}}",
    "availability_zone_id" : "{{dev_availability_zone_id}}",
    "host_spec_id" : "{{dev_host_spec_id}}",
    "windows_enabled": false
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
client.global.set('host_group_id', response.body.data.id);
client.log('Initial Host Group: ' + response.body.data.id);
%}

### Create a Host
POST https://{{host}}/{{version}}/hosts
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Capacity Check Host",
    "host_group_id": "{{host_group_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('host_id', response.body.data.id);
client.log('Host Group ID: ' + response.body.data.id);
%}

### Check Create a Host worked (may take some time)
GET https://{{host}}/{{version}}/hosts/{{host_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json


### Create instance to test with in shared host group
POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "name": "Test",
    "vcpu_cores": 1,
    "ram_capacity": 1024,
    "image_id": "{{dev_image_id}}",
    "requires_floating_ip": false,
    "network_id": "{{dev_network_id}}",
    "volume_capacity": 30,
    "volume_iops": 600,
    "resource_tier_id": {{dev_resource_tier_id}}
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set("instance_id", response.body.data.id);
%}

###
GET https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.resource_tier_id === "rt-aaaaaaaa");
});
%}


### Move the instance to a PRIVATE host group
POST https://{{host}}/{{version}}/instances/{{instance_id}}/migrate
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "host_group_id": "{{host_group_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

%}

###
GET https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.host_group_id == client.global.get('host_group_id'));
});

%}

### Move the instance to a SHARED resource tier
POST https://{{host}}/{{version}}/instances/{{instance_id}}/migrate
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json


> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

%}

###
GET https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json


### Cleanup instance
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json


### Cleanup Host
DELETE https://{{host}}/{{version}}/hosts/{{host_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json


### Cleanup Host Group
DELETE https://{{host}}/{{version}}/host-groups/{{host_group_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json