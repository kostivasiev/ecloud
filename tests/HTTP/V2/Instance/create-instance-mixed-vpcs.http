### Create VPC
POST https://{{host}}/{{version}}/vpcs
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "name": "First VPC",
    "region_id": "{{dev_region_id}}"
}

> {%
client.test("Request executed successfully", function() {
    client.assert(response.status === 202, "Response status is not 202");
});
client.global.set('vpc_id', response.body.data.id);
client.log('VPC ID : ' + response.body.data.id);
%}

### Create Router
POST https://{{host}}/{{version}}/routers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "first router",
  "vpc_id": "{{vpc_id}}",
  "availability_zone_id" : "{{dev_availability_zone_id}}"
}

> {%
client.test("Request executed successfully", function() {
    client.assert(response.status === 202, "Response status is not 202");
});
client.global.set('router_id', response.body.data.id);
client.log('Router ID: ' + response.body.data.id);
%}

### Create Network
POST https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "router_id": "{{router_id}}",
  "subnet": "172.22.2.0/29"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
client.global.set('network_id', response.body.data.id);
client.log('Network ID: ' + response.body.data.id);
%}

### Create Instance
POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "name": "Test",
    "vcpu_cores": 1,
    "ram_capacity": 1024,
    "image_id": "{{dev_image_id}}",
    "requires_floating_ip": false,
    "network_id": "{{network_id}}",
    "volume_capacity": 30,
    "volume_iops": 600
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 422, "Response status is not 422");
});
%}

### Delete Network
DELETE https://{{host}}/{{version}}/networks/{{network_id}}
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

### Delete Router
DELETE https://{{host}}/{{version}}/routers/{{router_id}}
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

### Delete First VPC
DELETE https://{{host}}/{{version}}/vpcs/{{vpc_id}}
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json