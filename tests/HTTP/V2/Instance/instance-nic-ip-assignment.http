POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  {{dev_reseller_id_admin}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "name": "Test",
    "vcpu_cores": 1,
    "ram_capacity": 1024,
    "image_id": "{{dev_image_id}}",
    "requires_floating_ip": false,
    "network_id": "{{dev_network_id}}",
    "volume_capacity": 30,
    "volume_iops": 600
}

> {%
client.global.set("instance_id", response.body.data.id);
client.log("Instance ID: " + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### Once the instance has finished deploying...get it's NIC
GET https://{{host}}/{{version}}/instances/{{instance_id}}/nics
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.global.set("nic_id", response.body.data[0].id);
client.log("NIC ID: " + response.body.data[0].id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET https://{{host}}/{{version}}/nics/{{nic_id}}/ip-addresses
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response");
  client.assert(response.body.data[0].type === "normal", "ID");
});
%}


###
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  {{dev_reseller_id_admin}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

