## Setup Dependancies
POST https://{{host}}/{{version}}/regions
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Test Region - LbcCrud"
}

> {%
client.global.set('region_id', response.body.data.id);
client.log('Region ID: ' + response.body.data.id);
%}
###

POST https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Test availability zone (v)",
  "datacentre_site_id": 111,
  "nsx_manager_endpoint": "https://185.197.63.88/",
  "nsx_edge_cluster_id": "8bc61267-583e-4988-b5d9-16b46f7fe900",
  "region_id": "{{region_id}}"
}

> {%
client.global.set('availability_zone_id', response.body.data.id);
client.log('Availability Zone ID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/vpcs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
X-Reseller-Id: 1

{
  "region_id": "{{region_id}}"
}

> {%
client.global.set('vpc_id', response.body.data.id);
client.log('VPC UUID: ' + response.body.data.id);
%}
###

POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  1-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "network_id": "net-136c72bf",
  "name": "Test - Credentials",
  "vpc_id": "{{vpc_id}}"
}

> {%
client.global.set('instance_id', response.body.data.id);
client.log('Instance ID: ' + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201 Created");
});
%}

###


POST https://{{host}}/{{version}}/credentials
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "TestName",
  "resource_id": "{{instance_id}}",
  "host": "http:127.0.0.1",
  "user": "TestUser",
  "password": "banana",
  "port": 8080
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('credential_id', response.body.data.id);
client.log('Credential ID: ' + response.body.data.id);
%}

###


### Test getting instance credentials


GET https://{{host}}/{{version}}/instances/{{instance_id}}/credentials
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data[0].id === client.global.get('credential_id'), "Incorrect resource ID returned");
});
%}

###



### Tear down dependancies
DELETE https://{{host}}/{{version}}/availability-zones/{{availability_zone_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/regions/{{region_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/vpcs/{{vpc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/credentials/{{credentials_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
