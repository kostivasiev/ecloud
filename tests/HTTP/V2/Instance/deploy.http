### 1. Test deploy an instance with no resource tier or host gorup specified.
# should deploy to defaut resource tier (standard CPU)

POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "vpc_id": "{{dev_vpc_id}}",
  "name": "Test",
  "vcpu_cores": 1,
  "ram_capacity": 1024,
  "image_id": "{{dev_image_id}}",
  "requires_floating_ip": false,
  "network_id": "{{dev_network_id}}",
  "volume_capacity": 30
}

> {%
client.global.set('instance_id', response.body.data.id);
client.log('Instance ID: ' + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### 2. Check deploy was successful
GET https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.global.set('instance_id', response.body.data.id);
client.log('Instance ID: ' + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### 3. Delete the instance
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

### 4. Test deploy an instance with resource tier
# should deploy to defaut resource tier (standard CPU)

POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "vpc_id": "{{dev_vpc_id}}",
  "name": "Test",
  "vcpu_cores": 1,
  "ram_capacity": 1024,
  "image_id": "{{dev_image_id}}",
  "requires_floating_ip": false,
  "network_id": "{{dev_network_id}}",
  "volume_capacity": 30,
  "resource_tier_id": "{{dev_resource_tier_id}}"
}

> {%
client.global.set('instance_id', response.body.data.id);
client.log('Instance ID: ' + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### 5. Check deploy was successful
GET https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.global.set('instance_id', response.body.data.id);
client.log('Instance ID: ' + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### 6. Delete the instance
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  {{dev_reseller_id_customer}}
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json


