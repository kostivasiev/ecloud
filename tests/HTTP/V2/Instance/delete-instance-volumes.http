###
# Create Instance
POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "vpc_id": "{{dev_vpc_id}}",
  "name": "Test",
  "vcpu_cores": 1,
  "ram_capacity": 1024,
  "image_id": "img-c879f613",
  "requires_floating_ip": true,
  "network_id": "net-54c46e3d",
  "volume_capacity": 15
}

> {%
client.global.set("instance_id", response.body.data.id);
client.log("Instance ID: " + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201 Created");
});
%}

###
# GET Volumes
GET https://{{host}}/{{version}}/instances/{{instance_id}}/volumes
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('Test get volumes', function () {
    client.assert(response.status === 200, 'Response was not HTTP 200');
    client.global.set('volume_id', response.body.data[0].id);
});
%}
###
# Delete Instance
DELETE https://{{host}}/{{version}}/instances/{{instance_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

###
GET https://{{host}}/{{version}}/volumes/{{volume_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('Check volume has been deleted', function () {
    client.assert(response.status === 404, 'Response was not HTTP 404');
});
%}