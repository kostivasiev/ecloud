### Create VPN Session
POST https://{{host}}/{{version}}/vpn-sessions
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "vpn session test",
    "vpn_profile_group_id": "vpnpg-aaaaaaaa",
    "vpn_service_id": "vpn-aaaaaaaa",
    "vpn_endpoint_id": "vpne-aaaaaaaa",
    "remote_ip": "211.12.13.1",
    "remote_networks": "172.12.23.11/32",
    "local_networks": "172.11.11.11/32,176.18.22.11/24"
}

> {%
client.test('Create VPN Session', function () {
    client.assert(response.status === 202, '202 response not received');
});
client.global.set('vpn_session_id', response.body.data.id);
client.log('VPN Session ID: ' + response.body.data.id);
%}

### Create Credential
POST https://{{host}}/{{version}}/credentials
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "VPN Session : {{vpn_session_id}}",
  "resource_id": "{{vpn_session_id}}",
  "host": null,
  "username": "psk",
  "password": "jv3wsTPhW4IR",
  "port": null
}

> {%
client.test("Credential Created", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('credential_id', response.body.data.id);
client.log('Credential ID: ' + response.body.data.id);
%}

### GET VPN Session Collection
GET https://{{host}}/{{version}}/vpn-sessions
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Collection', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### Get Resource
GET https://{{host}}/{{version}}/vpn-sessions/{{vpn_session_id}}
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Resource', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### Get Credential Resource
GET https://{{host}}/{{version}}/vpn-sessions/vpns-3b3e7bab/credentials
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Credential Resource', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(response.body.data.id === client.global.get('credential_id'), 'Credential does not match');
});
%}


### Delete Resource
DELETE https://{{host}}/{{version}}/vpn-sessions/{{vpn_session_id}}
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Resource', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}
