## Setup Dependancies

###

## Test Resource CRUD


POST https://{{host}}/{{version}}/credentials
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "3PAR",
  "resource_id": "az-aaaaaaaa",
  "host": null,
  "username": "apiuser",
  "password": "jv3wsTPhW4IR",
  "port": null
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('credential_id', response.body.data.id);
client.log('Credential ID: ' + response.body.data.id);
%}

###

GET https://{{host}}/{{version}}/credentials
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

GET https://ecloud-apio.paul.rnd.ukfast/v2/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('credential_id'), "Incorrect resource ID returned");
});
%}

###

PATCH https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "TestName - Updated",
  "resource_id": "abc-abc123",
  "host": "http:127..0.0.1 - Updated",
  "user": "TestUser - Updated",
  "password": "password - Updated",
  "port": 3663
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('credential_id'), "Incorrect resource ID returned");
});
%}

####


GET https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.name === "TestName - Updated");
  client.assert(response.body.data.resource_id === "abc-abc123");
  client.assert(response.body.data.host === "http:127..0.0.1 - Updated");
  client.assert(response.body.data.user === "TestUser - Updated");
  client.assert(response.body.data.password === "password - Updated");
  client.assert(response.body.data.port === 3663);
});
%}

####

DELETE https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

####

GET https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}



### Tear down dependancies

##
