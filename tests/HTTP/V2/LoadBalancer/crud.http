## Setup Dependancies
POST https://{{host}}/{{version}}/regions
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Test Region - LbcCrud"
}

> {%
client.global.set('region_id', response.body.data.id);
client.log('Region ID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/load-balancer-specs
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "small-1",
  "node_count": 1,
  "cpu": 1,
  "ram": 2,
  "hdd": 20,
  "iops": 300,
  "image_id": "img-aaaaaaaa"
}

> {%
client.global.set('load_balancer_spec_id', response.body.data.id);
client.log('LBS ID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Test AZ - LbcCrud",
  "datacentre_site_id": 111,
  "region_id": "{{region_id}}"
}

> {%
client.global.set('availability_zone_id', response.body.data.id);
client.log('Availability Zone ID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Test AZ 2- LbcCrud",
  "datacentre_site_id": 111,
  "region_id": "{{region_id}}"
}

> {%
client.global.set('availability_zone_id_2', response.body.data.id);
client.log('Availability Zone ID 2: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/vpcs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
X-Reseller-Id: 1

{
  "region_id": "{{region_id}}"
}

> {%
client.global.set('vpc_id', response.body.data.id);
client.log('VPC UUID: ' + response.body.data.id);
%}

###


## Test Resource CRUD


POST https://{{host}}/{{version}}/load-balancers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Test",
  "availability_zone_id": "{{availability_zone_id}}",
  "vpc_id": "{{vpc_id}}",
  "load_balancer_spec_id": "{{load_balancer_spec_id}}",
  "nodes": 3
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('lbc_id', response.body.data.id);
client.log('LBC ID: ' + response.body.data.id);
%}

###

GET https://{{host}}/{{version}}/load-balancers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

GET https://{{host}}/{{version}}/load-balancers/{{lbc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('lbc_id'), "Incorrect resource ID returned");
});
%}

###

PATCH https://{{host}}/{{version}}/load-balancers/{{lbc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Test - updated",
  "availability_zone_id": "{{availability_zone_id_2}}",
  "vpc_id": "{{vpc_id}}",
  "nodes": 4
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('lbc_id'), "Incorrect resource ID returned");
});
%}

###


GET https://{{host}}/{{version}}/load-balancers/{{lbc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.name === "Test - updated", "name property was not updated");
  client.assert(response.body.data.availability_zone_id === client.global.get('availability_zone_id_2'), "availability_zone_id property was not updated");
});
%}

###

DELETE https://{{host}}/{{version}}/load-balancers/{{lbc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

###

GET https://{{host}}/{{version}}/load-balancers/{{lbc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}



### Tear down dependancies

DELETE https://{{host}}/{{version}}/regions/{{region_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

###
DELETE https://{{host}}/{{version}}/availability_zones/{{availability_zone_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

###
DELETE https://{{host}}/{{version}}/availability_zones/{{availability_zone_id_2}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

###
DELETE https://{{host}}/{{version}}/vpcs/{{vpc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
