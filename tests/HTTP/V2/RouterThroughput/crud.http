POST https://{{host}}/{{version}}/router-throughputs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "10Gb",
  "availability_zone_id": "{{dev_availability_zone_id}}",
  "committed_bandwidth": 10240
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('routerThroughputId', response.body.data.id);
client.log('routerThroughputId: ' + response.body.data.id);
%}

###

###
GET https://{{host}}/{{version}}/router-throughputs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET https://{{host}}/{{version}}/availability-zones/{{dev_availability_zone_id}}/router-throughputs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET https://{{host}}/{{version}}/router-throughputs/{{routerThroughputId}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.availability_zone_id === "az-aaaaaaaa", "availability_zone_id property incorrect");
  client.assert(response.body.data.name === "10Gb", "name property incorrect");
  client.assert(response.body.data.committed_bandwidth === 10240, "committed_bandwidth property incorrect");
});
%}
###

PATCH https://{{host}}/{{version}}/router-throughputs/{{routerThroughputId}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "10Gb - updated",
  "availability_zone_id": "az-bbbbbbbb",
  "committed_bandwidth": 888
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET https://{{host}}/{{version}}/router-throughputs/{{routerThroughputId}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.availability_zone_id === "az-bbbbbbbb", "availability_zone_id property incorrect");
  client.assert(response.body.data.name === "10Gb - updated", "name property incorrect");
  client.assert(response.body.data.committed_bandwidth === 888, "committed_bandwidth property incorrect");
});
%}
###

###
DELETE https://{{host}}/{{version}}/router-throughputs/{{routerThroughputId}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

###

GET https://{{host}}/{{version}}/router-throughputs/{{routerThroughputId}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}
###