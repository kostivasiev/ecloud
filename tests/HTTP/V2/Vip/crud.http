## 1 setup
POST https://{{host}}/{{version}}/ip-addresses
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Test",
    "ip_address": "1.1.1.1",
    "type": "normal"
}

> {%
client.global.set('ip_address_id', response.body.data.id);
%}

### 2
POST https://{{host}}/{{version}}/ip-addresses
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Test 2",
    "ip_address": "2.1.1.1",
    "type": "normal"
}

> {%
client.global.set('ip_address_id_2', response.body.data.id);
%}

### 3 store
POST https://{{host}}/{{version}}/vips
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "id": "vip-14353186-dev",
  "ip_address_id": "{{ip_address_id}}"
}

> {%
client.test('Create', function () {
    client.assert(response.status === 201, '201 response not received');
});
client.global.set('vip_id', response.body.data.id);
client.log('Vip ID: ' + response.body.data.id);
%}

### 4 Get Collection
GET https://{{host}}/{{version}}/vips
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### 5 Get Item
GET https://{{host}}/{{version}}/vips/{{vip_id}}
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### 6
PATCH https://{{host}}/{{version}}/vips/{{vip_id}}
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "ip_address_id": "{{ip_address_id_2}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### 7 Confirm patch
GET https://{{host}}/{{version}}/vips/{{vip_id}}
X-consumer-custom-id: 7052-1
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.ip_address_id === client.global.get('ip_address_id_2'));
});
%}

### 8 destroy
DELETE https://{{host}}/{{version}}/vips/{{vip_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

### 9 confirm destroy
GET https://{{host}}/{{version}}/vips/{{vip_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 7052-1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Resource not found", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}