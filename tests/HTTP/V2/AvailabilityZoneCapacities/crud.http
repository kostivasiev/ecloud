# Create az capacity
POST https://{{host}}/{{version}}/availability-zone-capacities
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "availability_zone_id": "{{dev_availability_zone_id}}",
    "type": "floating_ip",
    "alert_warning": 60,
    "alert_critical": 80,
    "max": 95
}

> {%
client.global.set('capacity_id', response.body.data.id);
client.log('Capacity ID: ' + response.body.data.id);
%}

###
# Get Collection
GET https://{{host}}/{{version}}/availability-zone-capacities
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
# Get Item
GET https://{{host}}/{{version}}/availability-zone-capacities/azc-108abf01
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.availability_zone_id === 'az-aaaaaaaa');
  client.assert(response.body.data.type === 'cpu');
  client.assert(response.body.data.alert_warning === 60);
  client.assert(response.body.data.alert_critical === 80);
  client.assert(response.body.data.max === 95);
});
%}
###


GET https://{{host}}/{{version}}/availability-zones/{{dev_availability_zone_id}}/capacities
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###

PATCH https://{{host}}/{{version}}/availability-zone-capacities/{{capacity_id}}
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "availability_zone_id": "az-00488c3b",
    "type": "ram",
    "alert_warning": 10,
    "alert_critical": 85,
    "max": 90
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

# Confirm patch
GET https://{{host}}/{{version}}/availability-zone-capacities/{{capacity_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.availability_zone_id === 'az-00488c3b');
  client.assert(response.body.data.type === 'ram');
  client.assert(response.body.data.alert_warning === 10);
  client.assert(response.body.data.alert_critical === 85);
  client.assert(response.body.data.max === 90);
});
%}
###

# Delete
DELETE https://{{host}}/{{version}}/availability-zone-capacities/{{capacity_id}}
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}
###

# Confirm Deleted
GET https://{{host}}/{{version}}/availability-zone-capacities/{{capacity_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}