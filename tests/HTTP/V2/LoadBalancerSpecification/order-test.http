## store
POST https://{{host}}/{{version}}/load-balancer-specs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "small",
    "description": "Example description",
    "node_count": 1,
    "cpu": 1,
    "ram": 1,
    "hdd": 1,
    "iops": 5,
    "image_id": "img-aaaaaaaa"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 202");
});

client.global.set('dev_load_balancer_spec_id_small', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}

###
## store
POST https://{{host}}/{{version}}/load-balancer-specs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "medium",
    "description": "Example description",
    "node_count": 2,
    "cpu": 4,
    "ram": 4,
    "hdd": 10,
    "iops": 5,
    "image_id": "img-aaaaaaaa"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 202");
});

client.global.set('dev_load_balancer_spec_id_medium', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}

###
## store
POST https://{{host}}/{{version}}/load-balancer-specs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "large",
    "description": "Example description",
    "node_count": 10,
    "cpu": 5,
    "ram": 5,
    "hdd": 20,
    "iops": 5,
    "image_id": "img-aaaaaaaa"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 202");
});

client.global.set('dev_load_balancer_spec_id_large', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}

###

## store
POST https://{{host}}/{{version}}/load-balancer-specs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "small-medium",
    "description": "Example description",
    "node_count": 1,
    "cpu": 4,
    "ram": 4,
    "hdd": 10,
    "iops": 5,
    "image_id": "img-aaaaaaaa"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 202");
});

client.global.set('dev_load_balancer_spec_id_small_medium', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}

###
# Check order is correct.
GET https://{{host}}/{{version}}/load-balancer-specs
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
# Delete Items
DELETE https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id_small}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###
# Delete Items
DELETE https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id_small_medium}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###
# Delete Items
DELETE https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id_medium}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###
# Delete Items
DELETE https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id_large}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
