## store
POST https://{{host}}/{{version}}/load-balancer-specs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "small-2",
  "description": "Example description",
  "node_count": 5,
  "cpu": 5,
  "ram": 5,
  "hdd": 5,
  "iops": 5,
  "image_id": "img-aaaaaaaa"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 202");
});

client.global.set('dev_load_balancer_spec_id', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}

###
# Get Collection
GET https://{{host}}/{{version}}/load-balancer-specs
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
# Get Item
GET https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('dev_load_balancer_spec_id'), "incorrect ID");
  client.assert(response.body.data.name === 'small-2', "Incorrect name");
  client.assert(response.body.data.node_count === 5, "Incorrect Count");
  client.assert(response.body.data.cpu === 5, "CPU");
  client.assert(response.body.data.ram === 5, "RAM");
  client.assert(response.body.data.hdd === 5, "HDD");
  client.assert(response.body.data.iops === 5, "IOPS");
  client.assert(response.body.data.image_id === "img-aaaaaaaa", "image_id");
});
%}
###

PATCH https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id}}
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "small-2",
  "description": "Example description 2",
  "node_count": 1,
  "cpu": 1,
  "ram": 1,
  "hdd": 1,
  "iops": 1,
  "image_id": "img-aaaaaaaa"

}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

# Confirm patch
GET https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('dev_load_balancer_spec_id'));
  client.assert(response.body.data.name === 'small-2');
  client.assert(response.body.data.description === 'Example description 2');
  client.assert(response.body.data.node_count === 1);
  client.assert(response.body.data.cpu === 1);
  client.assert(response.body.data.ram === 1);
  client.assert(response.body.data.hdd === 1);
  client.assert(response.body.data.iops === 1);
  client.assert(response.body.data.image_id === "img-aaaaaaaa");
});
%}

### destroy
DELETE https://{{host}}/{{version}}/load-balancer-specs/{{dev_load_balancer_spec_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}