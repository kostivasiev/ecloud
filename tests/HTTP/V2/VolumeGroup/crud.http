### I request to create a new volume group item
POST https://{{host}}/{{version}}/volume-groups
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Unit Test Volume Group",
    "availability_zone_id": "{{dev_availability_zone_id}}",
    "vpc_id": "{{dev_vpc_id}}"
}

> {%
client.test('Create Volume Group', function () {
    client.assert(response.status === 202, '202 response not received');
});
client.global.set('volume_group_id', response.body.data.id);
client.log('Volume Group ID: ' + response.body.data.id);
%}

### I request the volgroup collection
GET https://{{host}}/{{version}}/volume-groups
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Volume Group Collection', function () {
    client.assert(response.status === 200, '200 response not received');
    var data = response.body.data;
    var found = false;
    for(k=0; k < data.length; k++) {
        if (data[k].id === client.global.get('volume_group_id')) {
            found = true;
        }
    }
    client.assert(found === true, 'Volume Group not found in collection');
});
%}

### I request to update the volume group collection/item
PATCH https://{{host}}/{{version}}/volume-groups/{{volume_group_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Updated Test Volume Group"
}

> {%
client.test('Update Volume Group', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}

### I request the volgroup item
GET https://{{host}}/{{version}}/volume-groups/{{volume_group_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Volume Group Item', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(response.body.data.name === 'Updated Test Volume Group', 'Name was not updated');
});
%}

### I request to delete a volume group item
DELETE https://{{host}}/{{version}}/volume-groups/{{volume_group_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Volume Group Item', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}

### Create a Volume Group
POST https://{{host}}/{{version}}/volume-groups
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Test Volume Group (with Volume)",
    "availability_zone_id": "{{dev_availability_zone_id}}",
    "vpc_id": "{{vpc_id}}"
}

> {%
client.test('Create Volume Group (with Volume)', function () {
    client.assert(response.status === 202, '202 response not received');
});
client.global.set('volume_group_id', response.body.data.id);
client.log('Volume Group ID: ' + response.body.data.id);
%}

### Create a Volume
POST https://{{host}}/{{version}}/volumes
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Volume for {{volume_group_id}}",
  "vpc_id": "{{vpc_id}}",
  "capacity": 25,
  "availability_zone_id": "{{dev_availability_zone_id}}"
}

> {%
client.test("Create Volume for Volume Group", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('volume_id', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);

client.log('Modify the database with:-');
client.log("UPDATE `volumes` SET `volume_group_id` = '" + client.global.get('volume_group_id') + "' WHERE id='" + client.global.get('volume_id') + "';")
%}

### Associate Volume with Volume Group

### This needs to be done in the database. Take the volume_group_id and use that to modify the volume entry in the database

### Attempt to Delete Volume Group
DELETE https://{{host}}/{{version}}/volume-groups/{{volume_group_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Volume Group with Associated Volume', function () {
    client.assert(response.status === 412, '412 response not received');
});

client.log('Modify the database with:-');
client.log("UPDATE `volumes` SET `volume_group_id` = NULL WHERE id='" + client.global.get('volume_id') + "';")
%}

### Dissassociate Volume

### This needs to be done in the database. Set the volume's volume_group_id column to NULL

### Delete Volume Group
DELETE https://{{host}}/{{version}}/volume-groups/{{volume_group_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Volume Group Item', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}

### Delete the volume
DELETE https://{{host}}/{{version}}/volumes/{{volume_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Delete Volume", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}