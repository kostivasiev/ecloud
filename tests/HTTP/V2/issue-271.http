###
# Run these steps one by one
###
# 1. First Create a Zone
POST https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Manchester Zone 1",
  "site_id": 111
}

> {%
client.global.set('zone_id', response.body.data.id);
client.log('Zone UUID: ' + response.body.data.id);
%}

###
# 2. View the zone collection
GET https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

###
# 3. Get detail on the zone we created
GET https://{{host}}/{{version}}/availability-zones/{{zone_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

###
# 4. Update the zone we created
PATCH https://{{host}}/{{version}}/availability-zones/{{zone_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Manchester Region Zone 1",
  "site_id": 111
}

###
# 5. Verify the name has changed
GET https://{{host}}/{{version}}/availability-zones/{{zone_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

###
# 6. Now delete the zone
DELETE https://{{host}}/{{version}}/availability-zones/{{zone_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

###
# 7. And verify that the zone is deleted
GET https://{{host}}/{{version}}/availability-zones/{{zone_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json