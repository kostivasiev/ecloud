### Create Firewall Policy
POST https://{{host}}/{{version}}/firewall-policies
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Sync Test",
  "sequence": 10,
  "router_id": "{{dev_router_id}}"
}

> {%
client.test('Create Firewall Policy', function () {
    client.assert(response.status === 201, '201 status not received');
    client.global.set('policy_id', response.body.data.id);
    client.log('Policy ID: ' + response.body.data.id);
});
%}

### Create Firewall Rule
POST https://{{host}}/{{version}}/firewall-rules
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "name": "Sync Test",
    "sequence": 10,
    "firewall_policy_id": "{{policy_id}}",
    "source": "192.168.100.1/24",
    "destination": "212.22.18.10/24",
    "action": "ALLOW",
    "direction": "IN",
    "enabled": true
}

> {%
client.test('Create Firewall Policy', function () {
    client.assert(response.status === 201, '201 status not received');
    client.global.set('rule_id', response.body.data.id);
    client.log('Rule ID: ' + response.body.data.id);
});
%}

### Create Firewall Port
POST https://{{host}}/{{version}}/firewall-rule-ports
X-consumer-custom-id:  1-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "firewall_rule_id": "{{rule_id}}",
    "protocol": "TCP",
    "source": "333",
    "destination": "444"
}

> {%
client.test('Create Firewall Port', function () {
    client.assert(response.status === 201, '201 status not received');
    client.global.set('port_id', response.body.data.id);
    client.log('Port ID: ' + response.body.data.id);
});
client.log('Run the following SQL query to force an in-progress sync status:-');
client.log('UPDATE `syncs` SET completed=0 WHERE resource_id=\'' + client.global.get('policy_id') + '\';');
%}