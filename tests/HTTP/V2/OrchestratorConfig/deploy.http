###
POST https://{{host}}/{{version}}/orchestrator-configs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "reseller_id": 7052,
    "employee_id": 1
}

> {%

client.global.set("orchestrator_config_id", response.body.data.id);
client.log("Builder Configuration ID: " + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
});
%}

###
POST https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}/data
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "vpcs": [
        {
            "name": "vpc-1",
            "region_id": "reg-aaaaaaaa"
        },
        {
            "name": "vpc-2",
            "region_id": "reg-aaaaaaaa",
            "console_enabled": true,
            "advanced_networking": true
        }
    ],
    "routers": [
        {
            "vpc_id": "{vpc.0}",
            "name": "router-1"
        },
        {
            "vpc_id": "{vpc.1}",
            "name": "router-2",
            "router_throughput_id": "rtp-aaaaaaaa",
            "configure_default_policies": true
        }
    ],
    "networks": [
        {
            "router_id": "{router.0}",
            "name": "network-1"
        },
        {
            "router_id": "{router.1}",
            "name": "network-2",
            "subnet": "10.0.0.0\/24"
        }
    ]
}
> {%

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
POST https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}/deploy
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.global.set("orchestrator_build_id", response.body.data.id);
client.log("orchestrator_build_id: " + response.body.data.id);

client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

###
GET https://{{host}}/{{version}}/orchestrator-builds/{{orchestrator_build_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.global.set("first_vpc_id", response.body.data.state.vpc[0]);
client.log("first_vpc_id: " + response.body.data.state.vpc[0]);

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET https://{{host}}/{{version}}/vpcs/{{first_vpc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

