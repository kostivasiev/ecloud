### Create Config
POST https://{{host}}/{{version}}/orchestrator-configs
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "reseller_id": 1,
    "employee_id": 1
}

> {%

client.test("Request executed successfully", function() {
    client.global.set("orchestrator_config_id", response.body.data.id);
    client.log("Builder Configuration ID: " + response.body.data.id);

    client.assert(response.status === 201, "Response status is not 201");
});
%}

#### Lock It
PATCH https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "locked": true
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

### Add Data
POST https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}/data
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-Reseller-Id: 1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "test"
}

> {%

client.test("Request executed successfully", function() {
  client.assert(response.status === 403, "Response status is not 403");
});
%}

#### Unlock It
PATCH https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "locked": false
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

### Add Data
POST https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}/data
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-Reseller-Id: 1
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "foo": "bar"
}

> {%

client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
DELETE https://{{host}}/{{version}}/orchestrator-configs/{{orchestrator_config_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_admin}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204);
});
%}