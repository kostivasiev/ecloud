###
# Create an Network Policy
POST https://{{host}}/{{version}}/network-policies
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "network_id": "{{dev_network_id}}",
    "name": "Test Policy"
}

> {%
client.test('Create a Network Policy', function () {
    client.assert(response.status === 202, '202 response not received');
    client.global.set('network_policy_id', response.body.data.id);
    client.log('Policy ID: ' + response.body.data.id);
});
%}

###
# Create Network Rule
POST https://{{host}}/{{version}}/network-rules
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "network_policy_id": "{{network_policy_id}}",
    "sequence": 1,
    "source": "10.0.1.0/32",
    "destination": "10.0.2.0/32",
    "action": "ALLOW",
    "enabled": true
}

> {%
client.test('Create a Network Rule', function () {
    client.assert(response.status === 202, '202 response not received');
    client.global.set('network_rule_id', response.body.data.id);
    client.log('Network Rule ID: ' + response.body.data.id);
});
%}

###
# Create Network Rule Ports
POST https://{{host}}/{{version}}/network-rule-ports
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "network_rule_id": "{{network_rule_id}}",
    "protocol": "TCP",
    "source": "443",
    "destination": "555"
}

> {%
client.test('Create a Network Rule Port', function () {
    client.assert(response.status === 202, '202 response not received');
    client.global.set('network_rule_port_id', response.body.data.id);
    client.log('Network Rule Port ID: ' + response.body.data.id);
});
%}

###
# Get Network Rule Ports Collection
GET https://{{host}}/{{version}}/network-rule-ports
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Network Rule Ports Collection', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(response.body.data[0].id, client.global.get('network_rule_port_id'));
});
%}

###
# Patch Network Rule Port
PATCH https://{{host}}/{{version}}/network-rule-ports/{{network_rule_port_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "New Port Rule Name",
    "source": "3360",
    "destination": "444"
}

> {%
client.test('Update Network Rule Ports', function () {
    client.assert(response.status === 202, '202 response not received');
    client.assert(response.body.data.id, client.global.get('network_rule_port_id'));
});
%}

###
# Get Network Rule Port
GET https://{{host}}/{{version}}/network-rule-ports/{{network_rule_port_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Get Network Rule Ports', function () {
    client.assert(response.status === 200, '200 response not received');
    client.assert(response.body.data.id, client.global.get('network_rule_port_id'));
});
%}

###
# Delete Network Rule Port
DELETE https://{{host}}/{{version}}/network-rule-ports/{{network_rule_port_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Network Rule Ports', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}

###
# Delete Network Rule
DELETE https://{{host}}/{{version}}/network-rules/{{network_rule_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Network Rule', function () {
    client.assert(response.status === 202, '202 response not received');
});
%}

###
# Delete Network Policy
DELETE https://{{host}}/{{version}}/network-policies/{{network_policy_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Network Policy', function () {
    client.assert(response.status === 204, '204 response not received');
    client.log('Run the following SQL on the Database:-');
    client.log('UPDATE syncs SET completed=1 WHERE resource_id=\'' + client.global.get('network_policy_id') + '\';');
    client.log('UPDATE network_policies SET deleted_at=NOW() WHERE id=\'' + client.global.get('network_policy_id') + '\';');
});
%}