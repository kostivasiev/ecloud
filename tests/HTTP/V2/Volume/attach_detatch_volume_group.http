### Create a volume group
POST https://{{host}}/{{version}}/volume-groups
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "Unit Test Volume Group",
    "availability_zone_id": "{{dev_availability_zone_id}}",
    "vpc_id": "{{dev_vpc_id}}"
}

> {%
client.test('Create Volume Group', function () {
    client.assert(response.status === 202, '202 response not received');
});
client.global.set('volume_group_id', response.body.data.id);
client.log('Volume Group ID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/volumes
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: {{dev_reseller_id_customer}}
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Test",
  "vpc_id": "{{dev_vpc_id}}",
  "capacity": 25,
  "availability_zone_id": "{{dev_availability_zone_id}}",
  "volume_group_id": "{{volume_group_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('volume_id', response.body.data.id);
client.log('Volume ID: ' + response.body.data.id);
%}


####
#PATCH https://{{host}}/{{version}}/volumes/{{volume_id}}
#Accept: */*
#Cache-Control: no-cache
#X-consumer-custom-id: 1-0
#X-consumer-groups: ecloud.read, ecloud.write
#Content-Type: application/json
#
#{
#
#}
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 202, "Response status is not 202");
#});
#
#client.global.set('volume_id', response.body.data.id);
#client.log('Volume ID: ' + response.body.data.id);
#%}

