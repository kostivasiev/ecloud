### Get a Volume
GET https://{{host}}/{{version}}/volumes/vol-e5083b12
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
    client.assert(response.status === 200, "Response status is not 200");
    client.global.set('volume_id', response.body.data.id);
    client.global.set('volume_name', response.body.data.name);
    client.log('Volume ID: ' + response.body.data.id);
});
%}

### Update Volume
PATCH https://{{host}}/{{version}}/volumes/{{volume_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Test - updated",
  "vpc_id": "vpc-abc123xyz",
  "availability_zone_id": "az-abc123xyz"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### Update Volume
PATCH https://{{host}}/{{version}}/volumes/{{volume_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
    "name": "{{volume_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}