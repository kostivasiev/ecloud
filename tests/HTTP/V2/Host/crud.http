### store
POST https://{{host}}/{{version}}/hosts
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
X-Reseller-Id: 1

{
    "name": "test host",
    "host_group_id" : "{{dev_host_group_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('host_id', response.body.data.id);
client.log('Host Group ID: ' + response.body.data.id);
%}

### index
GET https://{{host}}/{{version}}/hosts
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### show
GET https://{{host}}/{{version}}/hosts/{{host_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('host_id'), "Incorrect resource ID returned");
  client.assert(response.body.data.name === "test host");
  client.assert(response.body.data.host_group_id === "hg-aaaaaaaa");
});
%}

### update
PATCH https://{{host}}/{{version}}/hosts/{{host_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "new name"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### destroy
DELETE https://{{host}}/{{version}}/hosts/{{host_id}}
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}
