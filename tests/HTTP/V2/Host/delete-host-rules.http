### create a hostgroup
POST https://{{host}}/{{version}}/host-groups
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "availability_zone_id" : "{{dev_availability_zone_id}}",
    "host_spec_id" : "{{dev_host_spec_id}}",
    "windows_enabled": true
}

> {%
client.test("Create Host Group", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('host_group_id', response.body.data.id);
client.log('Host Group ID: ' + response.body.data.id);
%}

### create a host
POST https://{{host}}/{{version}}/hosts
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "host_group_id" : "{{host_group_id}}"
}

> {%
client.test("Create Host 1", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('host_id_1', response.body.data.id);
client.log('Host ID 1: ' + response.body.data.id);
%}

### add an instance
POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "name": "Host Deletion Rules Instance",
    "vcpu_cores": 1,
    "ram_capacity": 1024,
    "image_id": "{{dev_image_id}}",
    "network_id": "{{dev_network_id}}",
    "volume_capacity": 30,
    "volume_iops": 600,
    "host_group_id": "{{host_group_id}}"
}

> {%
client.global.set("instance_id_1", response.body.data.id);
client.log("Instance ID 1: " + response.body.data.id);

client.test("Create Instance", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### attempt to delete the host (active instances error)
DELETE https://{{host}}/{{version}}/hosts/{{host_id_1}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Single Host Single Instance Delete Failure", function() {
  client.assert(response.status === 422, "Response status is not 422");
});
%}

### now add another host
POST https://{{host}}/{{version}}/hosts
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "host_group_id" : "{{host_group_id}}"
}

> {%
client.test("Create Host 2", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('host_id_2', response.body.data.id);
client.log('Host ID 2: ' + response.body.data.id);
%}

### add another instance
POST https://{{host}}/{{version}}/instances
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "vpc_id": "{{dev_vpc_id}}",
    "name": "Host Deletion Rules Instance",
    "vcpu_cores": 1,
    "ram_capacity": 1024,
    "image_id": "{{dev_image_id}}",
    "network_id": "{{dev_network_id}}",
    "volume_capacity": 30,
    "volume_iops": 600,
    "host_group_id": "{{host_group_id}}"
}

> {%
client.global.set("instance_id_2", response.body.data.id);
client.log("Instance ID 2: " + response.body.data.id);

client.test("Create Instance", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### attempt to delete the other host (not enough resources)
DELETE https://{{host}}/{{version}}/hosts/{{host_id_2}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Deleting Host means insufficient resources", function() {
  client.assert(response.status === 422, "Response status is not 422");
});
%}

### delete instance 2
DELETE https://{{host}}/{{version}}/instances/{{instance_id_2}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Cleanup: Delete Instance #2", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### delete instance 1
DELETE https://{{host}}/{{version}}/instances/{{instance_id_1}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Cleanup: Delete Instance #1", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### delete host 2
DELETE https://{{host}}/{{version}}/hosts/{{host_id_2}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Cleanup: Delete Host #2", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### delete host 1
DELETE https://{{host}}/{{version}}/hosts/{{host_id_1}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Cleanup: Delete Host #1", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

### delete hostgroup
DELETE https://{{host}}/{{version}}/host-groups/{{host_group_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Cleanup: Delete HostGroup", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}