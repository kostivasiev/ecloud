POST https://{{host}}/{{version}}/nics
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "mac_address": "3D:F2:C9:A6:B3:4F",
  "instance_id": "{{dev_instance_id}}",
  "network_id": "{{dev_network_id}}",
  "ip_address": "10.0.0.5"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});

client.global.set('nic_id', response.body.data.id);
client.log('NIC ID: ' + response.body.data.id);
%}

###
GET https://{{host}}/{{version}}/nics
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET https://ecloud-apio.paul.rnd.ukfast/v2/nics/{{nic_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('nic_id'), "Incorrect resource ID returned");
  client.assert(response.body.data.mac_address === "3D:F2:C9:A6:B3:4F");
  client.assert(response.body.data.instance_id === client.global.get('instance_id'));
  client.assert(response.body.data.network_id === client.global.get('network_id'));
  client.assert(response.body.data.ip_address === "10.0.0.5");
});
%}

###

PATCH https://{{host}}/{{version}}/nics/{{nic_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "ip_address": "10.0.0.6"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
  client.assert(response.body.data.id === client.global.get('nic_id'), "Incorrect resource ID returned");
});
%}
###


GET https://{{host}}/{{version}}/nics/{{nic_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.body.data.ip_address === "10.0.0.6");

});
%}

####

DELETE https://{{host}}/{{version}}/nics/{{nic_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

####

GET https://{{host}}/{{version}}/nics/{{nic_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}

