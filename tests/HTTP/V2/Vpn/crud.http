### Get Collection
GET https://{{host}}/{{version}}/vpns
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('Collection Retrieved', function () {
    client.assert(response.status === 200, '200 Response not received');
});
%}

### Create VPN
POST https://{{host}}/{{version}}/vpns
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "name": "VPN HTTP Request Test",
    "router_id": "{{dev_router_id}}"
}

> {%
client.test('VPN Created', function () {
    client.assert(response.status === 202, '202 Response not received');
});
client.global.set('vpn_id', response.body.data.id);
client.log('VPN ID: ' + response.body.data.id);
%}

### Get Resource
GET https://{{host}}/{{version}}/vpns/{{vpn_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('Resource Retrieved', function () {
    client.assert(response.status === 200, '200 Response not received');
});
%}

### Update Resource
PATCH https://{{host}}/{{version}}/vpns/{{vpn_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "name": "VPN HTTP Request Test (Updated)"
}

> {%
client.test('VPN Updated', function () {
    client.assert(response.status === 202, '202 Response not received');
});
%}

### Verify Updated Resource
GET https://{{host}}/{{version}}/vpns/{{vpn_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('Resource Retrieved', function () {
    client.assert(response.status === 200, '200 Response not received');
    client.assert(response.body.data.name == 'VPN HTTP Request Test (Updated)', 'Name did not match update');
});
%}

### Delete Resource
DELETE https://{{host}}/{{version}}/vpns/{{vpn_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test('VPN Deleted', function () {
    client.assert(response.status === 202, '202 Response not received');
});
%}