###
# Create a VPC
POST https://{{host}}/{{version}}/vpcs
X-consumer-custom-id:  1-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
    "name": "DELTEST VPC",
    "region_id": "{{dev_region_id}}"
}

> {%
client.test('Create VPC', function () {
    client.assert(response.status === 201, '201 status not received');
    client.global.set('vpc_id', response.body.data.id);
    client.log('VPC ID : ' + response.body.data.id);
});
%}

###
# create new router
POST https://{{host}}/{{version}}/routers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "test router",
  "vpc_id": "{{vpc_id}}",
  "availability_zone_id" : "az-a4df6d3b"
}

> {%
client.test('Create Router', function () {
    client.assert(response.status === 201, '201 response not received');
    client.global.set('router_id', response.body.data.id);
    client.log('Router ID: ' + response.body.data.id);
});
%}

###
# Get Router
GET https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

###
# Delete Router
DELETE https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete Router', function () {
    client.assert(response.status === 204, '204 response not received');
});
%}

###
GET https://185.197.63.88/policy/api/v1/infra/tier-1s/{{router_id}}
Authorization: Basic {{nsx_username}} {{nsx_password}}
Content-Type:  application/json