### Create a router
POST https://{{host}}/{{version}}/routers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "test router",
  "vpc_id": "{{dev_vpc_id}}",
  "availability_zone_id" : "{{dev_availability_zone_id}}"
}

> {%
client.test("Request executed successfully", function() {
    client.assert(response.status === 201, "Response status is not 200");
    client.global.set('router_id', response.body.data.id);
    client.log('Router ID: ' + response.body.data.id);
});
%}

### Create Network
POST https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "router_id": "{{router_id}}",
  "subnet": "172.22.2.0/29"
}

> {%
client.test("Request executed successfully", function() {
    client.assert(response.status === 201, "Response status is not 200");
    client.global.set('network_id', response.body.data.id);
    client.log('Network ID: ' + response.body.data.id);
});
%}

### Delete the router
DELETE https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Attempt to delete the router', function () {
    client.assert(response.status === 412, '412 response not received');
});
%}

### Check the router still exists
GET https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Test router still present', function () {
    client.assert(response.status === 200, '200 response not received');
});
%}

### Delete the network
DELETE https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Delete the network', function () {
    client.assert(response.status === 204, '204 response not received');
});
%}

### Check the network is deleted
GET https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Check network is deleted', function () {
    client.assert(response.status === 404, '404 response not received');
});
%}

### Delete the router
DELETE https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Attempt to delete the router', function () {
    client.assert(response.status === 204, '204 response not received');
});
%}

### Check the router is deleted
GET https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test('Test router is deleted', function () {
    client.assert(response.status === 404, '404 response not received');
});
%}