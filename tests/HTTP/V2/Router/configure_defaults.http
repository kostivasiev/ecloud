# Create a router
POST https://{{host}}/{{version}}/routers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Test router defaults",
  "vpc_id": "{{dev_vpc_id}}",
  "availability_zone_id" : "{{dev_availability_zone_id}}"
}

> {%
client.global.set('router_id', response.body.data.id);
client.log('Router ID: ' + response.body.data.id);
%}
###
# rtr-69f4fa64

# Create defaults
#POST https://{{host}}/{{version}}/routers/{router_id}/configure-defaults
POST https://{{host}}/{{version}}/routers/rtr-69f4fa64/configure-defaults
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 202, "Response status is not 202");
});
%}

###







## Delete router (this does not clean up NSX at the moment)
DELETE https://{{host}}/{{version}}/routers/{{router_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###