## Setup Dependancies

###
POST https://{{host}}/{{version}}/regions
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Test Region - Pete"
}

> {%
client.global.set('region_id', response.body.data.id);
client.log('Region UUID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/availability-zones
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "code": "MAN1",
  "name": "Test AZ - Pete",
  "datacentre_site_id": 111,
  "nsx_manager_endpoint": "https://185.197.63.88/",
  "nsx_edge_cluster_id": "8bc61267-583e-4988-b5d9-16b46f7fe900",
  "region_id": "{{region_id}}"
}

> {%
client.global.set('availability_zone_id', response.body.data.id);
client.log('Availability Zone UUID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/vpcs
X-consumer-custom-id:  1-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Test VPC - Pete",
  "region_id": "{{region_id}}",
  "availability_zone_id": "{{availability_zone_id}}"
}

> {%
client.global.set('vpc_id', response.body.data.id);
client.log('VPC UUID: ' + response.body.data.id);
%}

###
POST https://{{host}}/{{version}}/routers
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "subnet test",
  "vpc_id": "{{vpc_id}}",
  "availability_zone_id": "{{availability_zone_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('router_id', response.body.data.id);
client.log('Router ID: ' + response.body.data.id);
%}

###
###

## Test Resource CRUD


POST https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "router_id": "{{router_id}}",
  "subnet_range": "10.0.0.0/24"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('network_id', response.body.data.id);
client.log('Network ID: ' + response.body.data.id);
%}

###


GET https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET https://ecloud-apio.paul.rnd.ukfast/v2/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('network_id'), "Incorrect resource ID returned");
  client.assert(response.body.data.subnet_range === "10.0.0.0/24");
});
%}

###

PATCH https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "subnet_range": "192.168.0.0/24"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('network_id'), "Incorrect resource ID returned");
});
%}
###


GET https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.body.data.subnet_range === "192.168.0.0/24");

});
%}

###

DELETE https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

###

GET https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}



### Tear down dependancies

DELETE https://{{host}}/{{version}}/regions/{{region_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/availability_zones/{{availability_zone_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/vpc/{{vpc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
