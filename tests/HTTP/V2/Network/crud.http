POST https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "router_id": "{{dev_router_id}}"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 200");
});

client.global.set('network_id', response.body.data.id);
client.log('Network ID: ' + response.body.data.id);
%}

###
GET https://{{host}}/{{version}}/networks
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('network_id'), "Incorrect resource ID returned");
  client.assert(response.body.data.subnet === "10.0.0.0/24");
});
%}

###

PATCH https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "subnet": "192.168.0.0/24"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('network_id'), "Incorrect resource ID returned");
});
%}
###


GET https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.body.data.subnet === "192.168.0.0/24");

});
%}

###

DELETE https://{{host}}/{{version}}/networks/{{network_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}

###

GET https://{{host}}/{{version}}/credentials/{{credential_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}



### Tear down dependancies

DELETE https://{{host}}/{{version}}/regions/{{region_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/availability_zones/{{availability_zone_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
###
DELETE https://{{host}}/{{version}}/vpc/{{vpc_id}}
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json
