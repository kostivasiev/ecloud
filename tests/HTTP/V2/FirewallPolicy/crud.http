###
# Create Policy
POST https://{{host}}/{{version}}/firewall-policies
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

{
  "name": "Test Policy",
  "sequence": 10,
  "router_id": {{dev_router_id}}
}

> {%
client.global.set('policy_id', response.body.data.id);
client.log('Policy ID: ' + response.body.data.id);
%}

###
# Get Policy Collection
GET https://{{host}}/{{version}}/firewall-policies
Accept: */*
Cache-Control: no-cache
X-consumer-custom-id: 1-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
# Get Policy Item
GET https://{{host}}/{{version}}/firewall-policies/{{policy_id}}
X-consumer-custom-id:  0-0
X-consumer-groups:  ecloud.read, ecloud.write
Content-Type:  application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('policy_id'), "Incorrect resource ID returned");
  client.assert(response.body.data.name === "Test Policy");
  client.assert(response.body.data.router_id === "rtr-8240e9e5");
  client.assert(response.body.data.sequence === 10);
});
%}

###

PATCH https://{{host}}/{{version}}/firewall-policies/{{policy_id}}
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

{
  "name": "Updated Policy Name"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.data.id === client.global.get('policy_id'), "Incorrect resource ID returned");
});
%}

###
# Delete Policy
DELETE https://{{host}}/{{version}}/firewall-policies/{{policy_id}}
Cache-Control: no-cache
X-consumer-custom-id: 0-0
X-consumer-groups: ecloud.read, ecloud.write
Content-Type: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 204, "Response status is not 204");
});
%}